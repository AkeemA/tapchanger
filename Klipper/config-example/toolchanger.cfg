[toolchanger]
  t_command_restore_axis: Z
  params_safe_y: 120
  params_close_y: 15  
  params_fast_speed: 30000 # Go as fast as we can
  params_path_speed: 600 # 10mm/s for the actual change
  params_type = 'rods_mini'   # See available paths below
  # The dropoff path of each tool type, pickup path is the same in reverse.
  params_pads_mini_path: [{'y':9 ,'z':2}, {'y':8, 'z':0}, {'y':0, 'z':0, 'f':0.5},{'y':0, 'z':-5}, {'y':1, 'z':-7}, {'y':3, 'z':-9}, {'y':7,'z':-11}]
  params_pads_sb_path: [{'y':9.5 ,'z':8}, {'y':9.5, 'z':2}, {'y':5.5, 'z':0}, {'y':0, 'z':0, 'f':0.5},{'y':0, 'z':-5}, {'y':1, 'z':-7}, {'y':3, 'z':-9}, {'y':7,'z':-11}]
  params_rods_mini_path: [{'z':0, 'y':4}, {'z':0, 'y':0, 'f':0.5}, {'z':-6, 'y':0}, {'z':-10, 'y':3}, {'z':-10, 'y':16}]
  params_rods_sb_path: [{'y':9.5 ,'z':8}, {'y':9.5, 'z':2}, {'y':5.5, 'z':0}, {'z':0, 'y':0, 'f':0.5}, {'z':-6, 'y':0}, {'z':-10, 'y':3}, {'z':-10, 'y':16}]
  params_rods_mini_hookon_path: [{'z':0, 'y':4}, {'z':0, 'y':0, 'f':0.5}, {'z':-7.3, 'y':0}, {'z':-11.3, 'y':3}, {'z':-12, 'y':16}]
  # Parking position - per tool
  #params_park_x = 142.2
  #params_park_y = -6.0
  #params_park_z = 308.2
  # Default shaper params
  params_input_shaper_freq_x: 62.4
  params_input_shaper_freq_y: 88.6
  initialize_on: manual
  initialize_gcode:
    DETECT_ACTIVE_TOOL_PROBE
    _INITIALIZE_FROM_DETECTED_TOOL

  before_change_gcode: 
    {% set tn = "T"+(tool.tool_number|string) %}
    {% if printer["gcode_macro " + tn ] %}
       SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="''"
    {% endif %}

  after_change_gcode: 
    {% set tn = "T"+(tool.tool_number|string) %}
    {% if printer["gcode_macro " + tn ] %}
       SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="'c44'"
    {% endif %}    
    {% if tool.params_input_shaper_freq_x %}
      SET_INPUT_SHAPER SHAPER_FREQ_X={tool.params_input_shaper_freq_x} SHAPER_FREQ_Y={tool.params_input_shaper_freq_y}
    {% endif %}
  
  dropoff_gcode:
    {% set x = tool.params_park_x|float %} 
    {% set y = tool.params_park_y|float %} 
    {% set z = tool.params_park_z|float %} 
    {% set fast = tool.params_fast_speed|float %}
    {% set path = tool['params_' ~ tool.params_type ~ '_path'] %}
    RESPOND TYPE=echo MSG='Dropping off {tool.name}'
    ; Move 1 mm up to avoid crashing into things
    G91
    G0 Z1 F1000               
    G90         
    #   ##############  Fast to the first point  ##############
    G0 Y{tool.params_safe_y} F{fast}
    G0 X{x} Z{z + path[0]['z']|float} F{fast}
    G0 Y{y + path[0]['y']|float} F{fast}
    STOP_TOOL_PROBE_CRASH_DETECTION
    #  ############## Run the path ##############
    {% for pos in path %}
        G0 Y{y + pos['y']|float} Z{z + pos['z']|float} F{tool.params_path_speed|float * (pos.get('f', 1.0)|float) }
    {% endfor %}
    #   ############## Out and about ##############
    G0 Y{tool.params_close_y} F{fast}

  pickup_gcode:
    {% set x = tool.params_park_x|float %} 
    {% set y = tool.params_park_y|float %} 
    {% set z = tool.params_park_z|float %} 
    {% set fast = tool.params_fast_speed|float %}
    {% set path = tool['params_' ~ tool.params_type ~ '_path'] %}
    RESPOND TYPE=echo MSG='Picking up {tool.name}'
    G90
    #   ##############  Fast to the last point  ##############
    G0 Y{tool.params_close_y} X{x} Z{z + path[-1]['z']|float} F{fast}
    G0 Y{y + path[-1]['y']|float} F{fast}
    # Wait for temp before actually picking up the tool, while the nozzle is resting on it's pad.
    
    {% if tool.heater %}
      M109 T{tool.tool_number} S{printer[tool.heater].target|int}
    {% endif %}
    # Run the path in reverse
    {% for pos in path|reverse %}
      G0 Y{y + pos['y']|float} Z{z + pos['z']|float} F{tool.params_path_speed|float * (pos.get('f', 1.0)|float) }      
      {% if 'f' in pos %} # Use the f presence as marker that we have made contact with the tool.
        START_TOOL_PROBE_CRASH_DETECTION T={tool.tool_number}
      {% endif %}
    {% endfor %}
    # Out to safe distance    
    G0 Y{tool.params_safe_y} F{fast}
    {% if printer.idle_timeout.state | string != "Printing" %} 
      STOP_TOOL_PROBE_CRASH_DETECTION
    {% endif %}

[gcode_macro _INITIALIZE_FROM_DETECTED_TOOL]
gcode:
  {% if printer.tool_probe_endstop.active_tool_number | int == -1 %} 
    RESPOND TYPE=error MSG='Failed to detect active tool'
    PAUSE
  {% else %}
    INITIALIZE_TOOLCHANGER T={printer.tool_probe_endstop.active_tool_number}
  {% endif %}    

  
[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE{newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}


[gcode_macro M109]
rename_existing: M109.1
description: [T<index>] [S<temperature>]
  Set tool temperature and wait.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE WAIT=1 {newparameters}
  {% else %}
    M109.1 {rawparams}
  {% endif %}
